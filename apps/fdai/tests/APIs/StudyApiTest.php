<?php namespace Tests\APIs;

use App\Models\UserVariableRelationship;
use App\Properties\User\UserIdProperty;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\UnitTestCase;
use Tests\ApiTestTrait;
use App\Models\Study;

class StudyApiTest extends UnitTestCase
{
    use ApiTestTrait;
    public function setUp(): void
    {
        $this->markTestSkipped('Not implemented yet.');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_create_study()
    {
        $c = UserVariableRelationship::fakeFromPropertyModels();
        $this->assertEquals(UserIdProperty::USER_ID_TEST_USER, $c->user_id);
        $study = Study::factory()->make()->toArray();
        $this->assertEquals(UserIdProperty::USER_ID_TEST_USER, $study['user_id']);
        $this->assertContains(UserIdProperty::USER_ID_TEST_USER, $study['id']);
        $r = $this->jsonAsUser18535(
            'POST',
            '/api/v6/studies', $study
        );

        $this->assertApiResponse($study);
    }

    public function test_read_study()
    {
        $study = Study::fakeSaveFromPropertyModels();

        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/studies/'.$study->id
        );

        $this->assertApiResponse($study->toArray());
    }

    public function test_update_study()
    {
        /** @var Study $study */
        $study = Study::fakeSaveFromPropertyModels();
        $this->assertEquals(UserIdProperty::USER_ID_TEST_USER, $study->user_id);
        $this->assertContains(UserIdProperty::USER_ID_TEST_USER, $study->id);
        $editedStudy = Study::factory()->make()->toArray();

        $r = $this->jsonAsUser18535(
            'PUT',
            '/api/v6/studies/'.$study->id,
            $editedStudy
        );

        $this->assertApiResponse($editedStudy);
    }

    public function test_delete_study()
    {
        $c = UserVariableRelationship::fakeFromPropertyModels();
        $this->assertEquals(UserIdProperty::USER_ID_TEST_USER, $c->user_id);
        /** @var Study $study */
        $study = Study::fakeSaveFromPropertyModels();
        $this->assertEquals(UserIdProperty::USER_ID_TEST_USER, $study->user_id);
        $this->assertNotNull(Study::find($study->id));

        $r = $this->jsonAsUser18535(
            'DELETE',
             '/api/v6/studies/'.$study->id
         );

        $this->assertApiSuccess();
        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/studies/'.$study->id
        );

        $this->testResponse->assertStatus(404);
    }
}
