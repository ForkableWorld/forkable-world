<?php namespace Tests\APIs;

use App\Properties\Base\BaseAccessTokenProperty;
use App\Properties\OAAccessToken\OAAccessTokenScopeProperty;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\UnitTestCase;
use Tests\ApiTestTrait;
use App\Models\OAAccessToken;

class OAAccessTokenApiTest extends UnitTestCase
{
    use ApiTestTrait;
    public function setUp(): void
    {
        $this->markTestSkipped('Not implemented yet.');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_create_oa_access_token()
    {
        $bshafferOauthAccessToken = OAAccessToken::factory()->make()->toArray();

        $r = $this->jsonAsUser18535(
            'POST',
            '/api/v6/oa_access_tokens', $bshafferOauthAccessToken
        );

        $this->assertApiResponse($bshafferOauthAccessToken);
    }

    public function test_read_oa_access_token()
    {
        $bshafferOauthAccessToken = OAAccessToken::fakeSaveFromPropertyModels();

        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/oa_access_tokens/'.$bshafferOauthAccessToken->access_token
        );

        $this->assertApiResponse($bshafferOauthAccessToken->toArray());
    }

    public function test_update_oa_access_token()
    {
        /** @var OAAccessToken $bshafferOauthAccessToken */
        $bshafferOauthAccessToken = OAAccessToken::fakeSaveFromPropertyModels();
        $bshafferOauthAccessToken->scope = OAAccessTokenScopeProperty::WRITE_SCOPE;
        $bshafferOauthAccessToken->fill([
            'scope' => OAAccessTokenScopeProperty::WRITE_SCOPE
        ]);
        $bshafferOauthAccessToken->save();
        $this->assertEquals( OAAccessTokenScopeProperty::WRITE_SCOPE, $bshafferOauthAccessToken->scope );
        $editedOAAccessToken = ['scope' => OAAccessTokenScopeProperty::READ_SCOPE];

        $r = $this->jsonAsUser18535(
            'PUT',
            '/api/v6/oa_access_tokens/'.$bshafferOauthAccessToken->access_token,
            $editedOAAccessToken
        );
        /** @var OAAccessToken $gotten */
        $gotten = $this->getDecodedResponseContent();
        $this->assertEquals(OAAccessTokenScopeProperty::READ_SCOPE, $gotten->scope);
    }

    public function test_delete_oa_access_token()
    {
        $bshafferOauthAccessToken = OAAccessToken::fakeSaveFromPropertyModels();

        $r = $this->jsonAsUser18535(
            'DELETE',
             '/api/v6/oa_access_tokens/'.$bshafferOauthAccessToken->access_token
         );

        $this->assertApiSuccess();
        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/oa_access_tokens/'.$bshafferOauthAccessToken->access_token
        );

        $this->testResponse->assertStatus(404);
    }


}
