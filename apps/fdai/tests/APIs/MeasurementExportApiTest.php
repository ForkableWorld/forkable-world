<?php namespace Tests\APIs;

use Illuminate\Testing\TestResponse;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\UnitTestCase;
use Tests\ApiTestTrait;
use App\Models\MeasurementExport;

class MeasurementExportApiTest extends UnitTestCase
{
    use ApiTestTrait;
    public function setUp(): void
    {
        $this->markTestSkipped('Not implemented yet.');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_create_measurement_export()
    {
        $measurementExport = MeasurementExport::factory()->make()->toArray();

        $r = $this->jsonAsUser18535(
            'POST',
            '/api/v6/measurement_exports', $measurementExport
        );

        $this->assertApiResponse($measurementExport);
    }

    public function test_read_measurement_export()
    {
        $measurementExport = MeasurementExport::fakeSaveFromPropertyModels();

        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/measurement_exports/'.$measurementExport->id
        );

        $this->assertApiResponse($measurementExport->toArray());
    }

    public function test_update_measurement_export()
    {
        $measurementExport = MeasurementExport::fakeSaveFromPropertyModels();
        $editedMeasurementExport = MeasurementExport::factory()->make()->toArray();

        $r = $this->jsonAsUser18535(
            'PUT',
            '/api/v6/measurement_exports/'.$measurementExport->id,
            $editedMeasurementExport
        );

        $this->assertApiResponse($editedMeasurementExport);
    }

    public function test_delete_measurement_export()
    {
        $measurementExport = MeasurementExport::fakeSaveFromPropertyModels();

        $r = $this->jsonAsUser18535(
            'DELETE',
             '/api/v6/measurement_exports/'.$measurementExport->id
         );

        $this->assertApiSuccess();
        $r = $this->jsonAsUser18535(
            'GET',
            '/api/v6/measurement_exports/'.$measurementExport->id
        );

        $this->testResponse->assertStatus(404);
    }
}
