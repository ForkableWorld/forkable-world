<?php
/*
*  GNU General Public License v3.0
*  Contributors: ADD YOUR NAME HERE, Mike P. Sinn
 */

namespace App\Slim\Configuration;
use App\Utils\APIHelper;
use Slim\Http\Request as HttpRequest;
/** Class RouteConfig
 * Defines all routes for the QuantiModo API.
 */
class RouteConfiguration {
	/**
	 * API base path.
	 */
	public const BASE_PATH = '/api';
	/**
	 * Route array fields.
	 */
	public const FIELD_METHOD = 'method';
	public const FIELD_PATH = 'url';
	public const FIELD_AUTH = 'auth';
	public const FIELD_AUTH_SCOPE = 'authScope';
	public const FIELD_CONTROLLER = 'controller';
	public const FIELD_ACTION = 'action';
	public const FIELD_CACHE_MAX_AGE_IN_DAYS = 'cache_max_age_in_days';
	public const SCOPE_WRITE_MEASUREMENTS = 'writemeasurements';
	public const SCOPE_READ_MEASUREMENTS = 'readmeasurements';
	public const SCOPE_SUPER_ADMIN = 'super_admin';
	private const VERSION_1_ROUTES = [
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/card',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Card\\GetCardController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/static/:s3Path+',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'StaticData\\GetStaticDataController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/static',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'StaticData\\GetStaticDataController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/report',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Report\\GetReportController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/test',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Test\\GetTestController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/wpUsermetas',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpUsermeta\\GetWpUsermetaController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/wpUsermetas',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpUsermeta\\PostWpUsermetaController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/wpUsers',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpUser\\GetWpUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/wpUsers',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpUser\\PostWpUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/wpPostmetas',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpPostmeta\\GetWpPostmetaController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/wpPostmetas',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpPostmeta\\PostWpPostmetaController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/wpPosts',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpPost\\GetWpPostController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/wpPosts',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'WP\\WpPost\\PostWpPostController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/activities',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Activity\\GetActivityController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/activities',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Activity\\PostActivityController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/friends',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Friend\\GetFriendController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/friends',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Friend\\PostFriendController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/groups',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Group\\GetGroupController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/groups',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Group\\PostGroupController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/groupsMembers',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'GroupsMember\\GetGroupsMemberController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/groupsMembers',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'GroupsMember\\PostGroupsMemberController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/messagesMessages',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesMessage\\GetMessagesMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/messagesMessages',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesMessage\\PostMessagesMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/messages',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesMessage\\GetMessagesMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/messages',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesMessage\\PostMessagesMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/messagesNotices',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesNotice\\GetMessagesNoticeController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/messagesNotices',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesNotice\\PostMessagesNoticeController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/messagesRecipients',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesRecipient\\GetMessagesRecipientController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/messagesRecipients',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MessagesRecipient\\PostMessagesRecipientController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/notifications',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Notification\\GetNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/notifications',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Notification\\PostNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/userBlogs',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserBlog\\GetUserBlogController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userBlogs',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserBlog\\PostUserBlogController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/feed',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Feed\\GetUserFeedController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/feed',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Feed\\PostUserFeedController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/recast',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'RecastController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/recast/errors',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'RecastController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/dialogflow',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'DialogFlowController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/pairs',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Pair\\GetPairController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/connectors/connect',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\CreateConnectionController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/appSettings',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'AppSettings\\GetAppSettingsController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/appSettings',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'AppSettings\\PostAppSettingsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_DELETE,
			self::FIELD_PATH => '/v1/client/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'AppSettings\\DeleteClientAppController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/upgrade',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'AppSettings\\PostUpgradeController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/notes',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetNotesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurements/update',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\UpdateMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurements/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\DeleteMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurements/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetDeleteMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/study/publish',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\PublishStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/study',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\PublishStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/study/join',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\JoinStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/study/create',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\CreateStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/studies',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Study\\GetStudiesController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/studies/open',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Study\\GetStudiesController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/sql',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_SUPER_ADMIN,
			self::FIELD_CONTROLLER => 'GetSQLController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/aggregatedCorrelations',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetAggregatedCorrelationController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/user_variable_relationships',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetCorrelationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/user_variable_relationships/explanations',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetCorrelationExplanationsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userVariables/reset',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\ResetUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables/user/reset',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\ResetUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userVariables/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\DeleteUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables/user/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\DeleteUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Variable\\GetDeleteVariableController',
		],
		// OAuth
		// GetAuthorizationPageController
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/oauth/authorize',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\GetAuthorizationPageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/oauth2/authorize',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\GetAuthorizationPageController',
		],
		// CreateAuthorizationTokenController
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth2/authorize',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAuthorizationTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth/authorize',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAuthorizationTokenController',
		],
		// POST CreateAccessTokenController
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth2/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth2/access_token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/oauth/access_token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		// OPTIONS CreateAccessTokenController
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/v1/oauth2/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/v1/oauth2/access_token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/v1/oauth/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/v1/oauth/access_token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/pairs',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Pair\\GetPairController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/pairsCsv',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Pair\\GetPairCsvController',
		],
		// Connect v3
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connectors/:connector/:method',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/connectors/:connector/:method',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_DELETE,
			self::FIELD_PATH => '/v1/connectors/:connector/:method',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connectors/list',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\GetConnectorsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connectors',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\GetConnectorsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/user',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetAuthenticatedUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/user',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\PostUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/users',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetUsersController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_DELETE,
			self::FIELD_PATH => '/v1/user/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'User\\DeleteUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userSettings',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\PostUserSettingsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/user/me',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetAuthenticatedUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/units',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Unit\\GetUnitsController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/unitsVariable',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Unit\\ListUnitForVariableController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/unitCategories',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UnitCategory\\GetUnitCategoriesController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurements',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/highcharts',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'GetHighchartController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_AUTH => true,
			self::FIELD_CONTROLLER => 'GetChartPageController',
			self::FIELD_PATH => '/v1/chart/:chartType',
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurements/csv',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetMeasurementCsvController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurements/daily',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetDailyMeasurementController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurements/post',
			// Needed to deal with Swagger mistaking POST for GET request
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\PostMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurements',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\PostMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurements/v2',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\PostMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurementSources',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'MeasurementSource\\ListMeasurementSourceController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/measurementSources',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'MeasurementSource\\CreateMeasurementSourceController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/measurementsRange',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MeasurementRange\\GetMeasurementRangeController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/user_variable_relationships',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\PostCorrelationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/public/user_variable_relationships/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetAggregatedCorrelationController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/:variableName/public/causes',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetAggregatedCorrelationController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/:variableName/public/effects',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetAggregatedCorrelationController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/:variableName/causes',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetUserVariableRelationshipController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/:variableName/effects',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetUserVariableRelationshipController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		// Votes
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/votes',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Vote\\PostVoteController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/vote',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Vote\\GetVoteController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/votes',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Vote\\GetVotesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/votes/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Vote\\DeleteVoteController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/userTags',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserTag\\GetUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserTag\\PostUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserTag\\DeleteUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/userTags/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserTag\\GetDeleteUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/trackingReminders',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\GetTrackingReminderController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/trackingReminderNotifications',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\GetTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/past',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\GetPastTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/future',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\GetFutureTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminders',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\PostTrackingReminderController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/deviceTokens',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'DeviceToken\\PostDeviceTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/deviceTokens/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'DeviceToken\\DeleteDeviceTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminders/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\DeleteTrackingReminderController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotifications',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\PostTrackingReminderNotificationsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotification/received',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\ReceivedTrackingReminderNotificationsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/skip',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\SkipTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/skip/all',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\SkipAllTrackingReminderNotificationsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/snooze',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\\SnoozeTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/trackingReminderNotifications/track',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'TrackingReminder\TrackTrackingReminderNotificationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userVariables',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\PostUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables/user',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'UserVariable\\PostUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connect.js',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Connector\IntegrationJsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/integration.js',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Connector\IntegrationJsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connect/mobile',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Connector\IntegrationJsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/integration/mobile',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Connector\IntegrationJsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/public/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetCommonVariableController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/common',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetCommonVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetVariablesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/user/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetVariablesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/userVariables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariable\\GetUserVariablesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/user',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariable\\GetUserVariablesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/public/variables/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\SearchPublicVariableController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variables/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\SearchVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/ingredients',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Variable\\IngredientsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/ingredientContainers',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Variable\\IngredientContainersController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\PostVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/variableCategories',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'VariableCategory\GetVariableCategoryController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/shares',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\GetSharesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/shares',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\PostShareController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/shares/invite',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\PostShareController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/shares/invitePatient',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\PostPatientInvitationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/shares/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\DeleteShareController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variableUserSettings',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariable\\PostUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables/join',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\CreateJoinUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/variables/join/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\DeleteJoinUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags/ingredient',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\CreateIngredientUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags/ingredient/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\DeleteIngredientUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags/parent',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\CreateParentUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/userTags/parent/delete',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserTag\\DeleteParentUserTagController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/sendGridEventNotification',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\SendGridController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/googleIdToken',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GoogleIdTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/notificationPreferences',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetNotificationPreferencesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/facebookMessage',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetFacebookMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/facebookMessage',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\PostFacebookMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/twilio',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\PostTwilioMessageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/email',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\SendEmailController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/apiStats',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'GetApiStatsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/window/close',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\WindowCloseController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connection/finish',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectionFinishController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/connectors/finish',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectionFinishController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/connection/publicToken',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\PublicTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/human/connect/finish',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\HumanConnectFinishController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/quantimodo/connect/finish',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\QuantiModoConnectFinishController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/v1/connect/tokens',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\PostConnectTokensController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/study',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Study\\GetStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/studies/created',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\GetStudiesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/studies/joined',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Study\\GetStudiesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/study/html',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'Study\\GetStudyHtmlController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/study/user',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Study\\GetStudyController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/v1/study/population',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Study\\GetStudyController',
		],
	];
	private const VERSION_0_ROUTES = [
		// OAuth
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/oauth2/authorize',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\GetAuthorizationPageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/oauth2/authorize',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAuthorizationTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/oauth2/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/oauth2/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		// OAuth
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/oauth/authorize',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\GetAuthorizationPageController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_OPTIONS,
			self::FIELD_PATH => '/oauth/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/oauth/token',
			self::FIELD_AUTH => false,
			self::FIELD_CONTROLLER => 'OAuth2\\CreateAccessTokenController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/pairs',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Pair\\GetPairController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/pairsCsv',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Pair\\GetPairCsvController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/connectors/:connector/:method',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/connectors/:connector/:method',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_DELETE,
			self::FIELD_PATH => '/connectors/:connector/:method',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\ConnectorController',
			self::FIELD_ACTION => 'map',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/connectors/list',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\GetConnectorsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/connectors',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Connector\\GetConnectorsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/user',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetAuthenticatedUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/user/me',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'User\\GetAuthenticatedUserController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/units',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Unit\\GetUnitsController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/unitsVariable',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Unit\\ListUnitForVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/unitCategories',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UnitCategory\\GetUnitCategoriesController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/measurements',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\GetMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/measurements/v2',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_WRITE_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'Measurement\\PostMeasurementController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/user_variable_relationships',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetCorrelationController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/measurementSources',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'MeasurementSource\\ListMeasurementSourceController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/measurementSources',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'MeasurementSource\\CreateMeasurementSourceController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/measurementsRange',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => self::SCOPE_READ_MEASUREMENTS,
			self::FIELD_CONTROLLER => 'MeasurementRange\\GetMeasurementRangeController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/public/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetCommonVariableController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/public/user_variable_relationships/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariableRelationship\\GetAggregatedCorrelationController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/variables',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\GetVariablesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/public/variables/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\SearchPublicVariableController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/variables/search/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\SearchVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/variables',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\PostVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/variableCategories',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'VariableCategory\GetVariableCategoryController',
			self::FIELD_CACHE_MAX_AGE_IN_DAYS => 1,
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/sharing/:variableName',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\GetSharesController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/sharing',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\PostShareController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_DELETE,
			self::FIELD_PATH => '/sharing',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Share\\DeleteShareController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/variableUserSettings',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariable\\PostUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_POST,
			self::FIELD_PATH => '/userVariables',
			self::FIELD_AUTH => true,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'UserVariable\\PostUserVariableController',
		],
		[
			self::FIELD_METHOD => HttpRequest::METHOD_GET,
			self::FIELD_PATH => '/variables/:search',
			self::FIELD_AUTH => false,
			self::FIELD_AUTH_SCOPE => '',
			self::FIELD_CONTROLLER => 'Variable\\SearchVariableController',
		]
	];
	private static ?array $routes = null;

    /**
     * @return array An array containing all accessible routes.
     */
    public static function getRoutes(): array{
        $version = APIHelper::getApiVersion();
        if($version === 0){
            return self::VERSION_0_ROUTES;
        }
	    $version1Routes = self::VERSION_1_ROUTES;
        if($version === 1){
            return $version1Routes;
        }
        $allRoutes = [];
        foreach($version1Routes as $route){
            $route[self::FIELD_PATH] = str_replace('/v1/', "/v$version/", $route[self::FIELD_PATH]);
            $allRoutes[] = $route;
            if($deleteRoute = RouteConfiguration::createDeleteRoute($route)){
                $allRoutes[] = $deleteRoute;
            }
        }
        return self::$routes = $allRoutes;
    }

    /**
     * @param $postRoute
     * @return mixed
     */
    private static function createDeleteRoute($postRoute){
	    if(str_contains($postRoute[self::FIELD_PATH], '/delete') &&
            $postRoute[self::FIELD_METHOD] !== HttpRequest::METHOD_DELETE){
            $deleteRoute = $postRoute;
            $deleteRoute[self::FIELD_METHOD] = HttpRequest::METHOD_DELETE;
            $deleteRoute[self::FIELD_CONTROLLER] = 'DeleteMethods\\' . $deleteRoute[self::FIELD_CONTROLLER];
            return $deleteRoute;
        }
        return null;
    }
	/**
	 * @param string $class
	 * @return null|string
	 */
	public static function getPathByControllerClass(string $class): ?string{
		$controller = str_replace('App\Slim\Controller\\', '', $class);
		$routes = RouteConfiguration::getRoutes();
		foreach($routes as $route){
			if($route[self::FIELD_CONTROLLER] === $controller){
				return $route[self::FIELD_PATH];
			}
		}
		return null;
	}
}
