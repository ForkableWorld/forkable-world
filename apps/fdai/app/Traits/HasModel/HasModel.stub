<?php
namespace App\Traits\HasModel;
use App\Models\BaseModel;
use App\Slim\Model\DBModel;
use App\Models\{{short_parent_class}};
use App\Buttons\QMButton;
use App\Properties\BaseProperty;
trait {{short_trait_class}}
{
    public function get{{short_parent_class}}Id(): int {
        $nameOrId = $this->getAttribute('{{snake_class}}_id');
        return $nameOrId;
    }
    public function get{{short_parent_class}}Button(): QMButton {
        ${{camel_class}} = $this->get{{short_parent_class}}();
        if(${{camel_class}}){
            return ${{camel_class}}->getButton();
        }
        return {{short_parent_class}}::generateShowButton($this->get{{short_parent_class}}Id());
    }
    /**
     * @return {{short_parent_class}}
     */
    public function get{{short_parent_class}}(): {{short_parent_class}} {
        if($this instanceof BaseProperty && $this->parentModel instanceof {{short_parent_class}}){return $this->parentModel;}
        /** @var BaseModel|DBModel $this */
        if($l = $this->getRelationIfLoaded('{{snake_class}}')){return $l;}
        $id = $this->get{{short_parent_class}}Id();
        ${{camel_class}} = {{short_parent_class}}::findInMemoryOrDB($id);
        if(property_exists($this, 'relations')){ $this->relations['{{snake_class}}'] = ${{camel_class}}; }
        if(property_exists($this, '{{camel_class}}')){
            $this->{{camel_class}} = ${{camel_class}};
        }
        return ${{camel_class}};
    }
}