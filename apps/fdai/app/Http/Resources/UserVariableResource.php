<?php
/*
*  GNU General Public License v3.0
*  Contributors: ADD YOUR NAME HERE, Mike P. Sinn
 */

namespace App\Http\Resources;
use Illuminate\Http\Request;

/** @mixin \App\Models\UserVariable */
class UserVariableResource extends BaseJsonResource
{
    use ResourceHasCharts;
    /**
     * @param Request $request
     * @return array
     */
    public function toArray($request): array
    {
        $arr = [];
        $arr = $this->addChartsOrUrl($arr);
        $arr = array_merge($arr, [
            'id' => $this->id,
            'title' => $this->getTitleAttribute(),
            'name' => $this->name,
            'description' => $this->description,
            //'display_name' => $this->display_name,
            //'actions_count' => $this->actions_count,
            //'alias' => $this->alias,
            'analysis_ended_at' => $this->analysis_ended_at,
            'analysis_requested_at' => $this->analysis_requested_at,
            'analysis_settings_modified_at' => $this->analysis_settings_modified_at,
            'analysis_started_at' => $this->analysis_started_at,
            'average_seconds_between_measurements' => $this->average_seconds_between_measurements,
            'best_cause_variable' => ($this->best_cause_variable_id) ?
                new VariableResource($this->whenLoaded('best_cause_variable')) : null,
            'best_cause_variable_id' => $this->best_cause_variable_id,
            'best_correlations_where_cause_user_variable' =>
                CorrelationResource::collection($this->whenLoaded('best_correlations_where_cause_user_variable')),
            'best_correlations_where_cause_user_variable_count' => $this->best_correlations_where_cause_user_variable_count,
            'best_correlations_where_effect_user_variable' =>
                CorrelationResource::collection($this->whenLoaded('best_correlations_where_effect_user_variable')),
            'best_correlations_where_effect_user_variable_count' => $this->best_correlations_where_effect_user_variable_count,
            'best_effect_variable' => $this->relationLoaded('best_effect_variable') ?
                new VariableResource($this->whenLoaded('best_effect_variable')) : null,
            'best_effect_variable_id' => $this->best_effect_variable_id,
            'best_user_variable_relationship' => $this->relationLoaded('best_user_variable_relationship') ?
                new CorrelationResource($this->whenLoaded('best_user_variable_relationship')) : null,
            'best_user_variable_relationship_id' => $this->best_user_variable_relationship_id,
            'boring' => $this->boring,
            'cause_only' => $this->cause_only,
            'client_id' => $this->client_id,
            'combination_operation' => $this->combination_operation,
            'controllable' => $this->controllable,
            'correlations_count' => $this->correlations_count,
            'correlations_where_cause_user_variable_count' => $this->correlations_where_cause_user_variable_count,
            'correlations_where_effect_user_variable_count' => $this->correlations_where_effect_user_variable_count,
            'created_at' => $this->created_at,
            'data_sources_count' => $this->data_sources_count,
            'default_unit_id' => $this->default_unit_id,
            'duration_of_action' => $this->duration_of_action,
            'earliest_non_tagged_measurement_start_at' => $this->earliest_non_tagged_measurement_start_at,
            'earliest_source_measurement_start_at' => $this->earliest_source_measurement_start_at,
            'earliest_tagged_measurement_start_at' => $this->earliest_tagged_measurement_start_at,
            'error_message' => $this->error_message,
            'favoriters_count' => $this->favoriters_count,
            'favorites_count' => $this->favorites_count,
            'filling_type' => $this->filling_type,
            'filling_value' => $this->filling_value,
            'informational_url' => $this->informational_url,
            ////'internal_error_message' => $this->internal_error_message,
            //'invalid_record_for' => $this->invalid_record_for,
            'is_goal' => $this->is_goal,
            'is_public' => $this->is_public,
            'join_with' => $this->join_with,
            'kurtosis' => $this->kurtosis,
            'last_correlated_at' => $this->last_correlated_at,
            'last_original_unit_id' => $this->last_original_unit_id,
            'last_original_value' => $this->last_original_value,
            'last_unit_id' => $this->last_unit_id,
            'last_value' => $this->last_value,
            'latest_non_tagged_measurement_start_at' => $this->latest_non_tagged_measurement_start_at,
            'latest_source_measurement_start_at' => $this->latest_source_measurement_start_at,
            'latest_tagged_measurement_start_at' => $this->latest_tagged_measurement_start_at,
            'maximum_allowed_value' => $this->maximum_allowed_value,
            'maximum_recorded_daily_value' => $this->maximum_recorded_daily_value,
            'maximum_recorded_value' => $this->maximum_recorded_value,
            'mean' => $this->mean,
            'measurements_at_last_analysis' => $this->measurements_at_last_analysis,
            'measurements_count' => $this->measurements_count,
            'measurements' => $this->relationLoaded('measurements') ?
                MeasurementResource::collection($this->whenLoaded('measurements')) : null,
            //'media_count' => $this->media_count,
            'median' => $this->median,
            'median_seconds_between_measurements' => $this->median_seconds_between_measurements,
            'minimum_allowed_seconds_between_measurements' => $this->minimum_allowed_seconds_between_measurements,
            'minimum_allowed_value' => $this->minimum_allowed_value,
            'minimum_recorded_daily_value' => $this->minimum_recorded_daily_value,
            'minimum_recorded_value' => $this->minimum_recorded_value,
            'most_common_connector_id' => $this->most_common_connector_id,
            'most_common_original_unit_id' => $this->most_common_original_unit_id,
            'most_common_source_name' => $this->most_common_source_name,
            'most_common_value' => $this->most_common_value,
            'newest_data_at' => $this->newest_data_at,
            'number_common_tagged_by' => $this->number_common_tagged_by,
            'number_of_changes' => $this->number_of_changes,
            'number_of_common_children' => $this->number_of_common_children,
            'number_of_common_foods' => $this->number_of_common_foods,
            'number_of_common_ingredients' => $this->number_of_common_ingredients,
            'number_of_common_joined_variables' => $this->number_of_common_joined_variables,
            'number_of_common_parents' => $this->number_of_common_parents,
            'number_of_common_tags' => $this->number_of_common_tags,
            'number_of_correlations' => $this->number_of_correlations,
            'number_of_measurements' => $this->number_of_measurements,
            'number_of_measurements_with_tags_at_last_correlation' => $this->number_of_measurements_with_tags_at_last_correlation,
            'number_of_outcome_case_studies' => $this->number_of_outcome_case_studies,
            'number_of_processed_daily_measurements' => $this->number_of_processed_daily_measurements,
            'number_of_raw_measurements_with_tags_joins_children' => $this->number_of_raw_measurements_with_tags_joins_children,
            'number_of_soft_deleted_measurements' => $this->number_of_soft_deleted_measurements,
            'number_of_tracking_reminder_notifications' => $this->number_of_tracking_reminder_notifications,
            'number_of_tracking_reminders' => $this->number_of_tracking_reminders,
            'number_of_unique_daily_values' => $this->number_of_unique_daily_values,
            'number_of_unique_values' => $this->number_of_unique_values,
            'number_of_user_children' => $this->number_of_user_children,
            'number_of_user_variable_relationships_as_cause' => $this->number_of_user_variable_relationships_as_cause,
            'number_of_user_variable_relationships_as_effect' => $this->number_of_user_variable_relationships_as_effect,
            'number_of_user_foods' => $this->number_of_user_foods,
            'number_of_user_ingredients' => $this->number_of_user_ingredients,
            'number_of_user_joined_variables' => $this->number_of_user_joined_variables,
            'number_of_user_parents' => $this->number_of_user_parents,
            'number_of_user_tags' => $this->number_of_user_tags,
            'number_user_tagged_by' => $this->number_user_tagged_by,
            'onset_delay' => $this->onset_delay,
            'optimal_value_message' => $this->optimal_value_message,
            'outcome' => $this->outcome,
            'outcome_of_interest' => $this->outcome_of_interest,
            'outcomes' => $this->relationLoaded('outcomes') ?
                CorrelationResource::collection($this->whenLoaded('outcomes')) : null,
            'outcomes_count' => $this->outcomes_count,
            'parent_id' => $this->parent_id,
            'predictor' => $this->predictor,
            'predictor_of_interest' => $this->predictor_of_interest,
            'predictors' => $this->relationLoaded('predictors') ?
                CorrelationResource::collection($this->whenLoaded('predictors')) : null,
            'predictors_count' => $this->predictors_count,
            'reason_for_analysis' => $this->reason_for_analysis,
            'record_size_in_kb' => $this->record_size_in_kb,
            //'rule_for' => $this->rule_for,
            //'rules_for' => $this->rules_for,
            'second_to_last_value' => $this->second_to_last_value,
            'skewness' => $this->skewness,
            'slug' => $this->getSlugWithNames(),
            'sources' => $this->sources,
            'standard_deviation' => $this->standard_deviation,
            //'status' => $this->status,
            'subtitle' => $this->getSubtitleAttribute(),
            'third_to_last_value' => $this->third_to_last_value,
            'tracking_reminder_notifications_count' => $this->tracking_reminder_notifications_count,
            'tracking_reminders_count' => $this->tracking_reminders_count,
            //'unit_id' => $this->unit_id,
            //'updated' => $this->updated,
            'updated_at' => $this->updated_at,
            'user_error_message' => $this->user_error_message,
            'user_id' => $this->user_id,
            'user_maximum_allowed_daily_value' => $this->user_maximum_allowed_daily_value,
            'user_minimum_allowed_daily_value' => $this->user_minimum_allowed_daily_value,
            'user_minimum_allowed_non_zero_value' => $this->user_minimum_allowed_non_zero_value,
            'user_tags_where_tag_user_variable_count' => $this->user_tags_where_tag_user_variable_count,
            'user_tags_where_tagged_user_variable_count' => $this->user_tags_where_tagged_user_variable_count,
            'user_variable_clients_count' => $this->user_variable_clients_count,
            'user_variable_outcome_categories_count' => $this->user_variable_outcome_categories_count,
            'user_variable_predictor_categories_count' => $this->user_variable_predictor_categories_count,
            'valence' => $this->valence,
            'variable' => $this->getVariable(),
            'variable_category_id' => $this->variable_category_id,
            'variable_id' => $this->variable_id,
            'variable_user_sources_count' => $this->variable_user_sources_count,
            'variance' => $this->variance,
            'wikipedia_title' => $this->wikipedia_title,
            'wp_post_id' => $this->wp_post_id,
            //'deletion_reason' => $this->deletion_reason,
            //'earliest_filling_time' => $this->earliest_filling_time,
            //'experiment_end_time' => $this->experiment_end_time,
            //'experiment_start_time' => $this->experiment_start_time,
            //'last_processed_daily_value' => $this->last_processed_daily_value,
            //'latest_filling_time' => $this->latest_filling_time,
            //'latitude' => $this->latitude,
            //'location' => $this->location,
            //'longitude' => $this->longitude,
            ////'public' => $this->public,
        ]);
        $arr = $this->addChartsOrUrl($arr);
        return $arr;
    }
}
